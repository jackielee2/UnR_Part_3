==================================================================
1.	올빼미 날개와 배경 음악 처리
	[ 참고	:	https://blog.naver.com/foxmann/220278750828 ]

==================================================================

--------------------------------------------------
0]	개요.
--------------------------------------------------

	1]	올빼미가 점프할 때 날개를 접고, 착지할때 날개를 펴는 동작 적용.
	
	2]	배경음악 처리.



--------------------------------------------------
1]	올빼미의 다이나믹 머터리얼 인스턴스 만들기.
--------------------------------------------------

	------------
	-	개요
	------------

		-	인게임 중 머터리얼의 텍스처를 바꾸기 위해

			다이나믹 머터리얼 인스턴스 생성.



	------------
	-	실습
	------------

		1)	[ 컴포넌트 창 ] > [ Owl 노드 ]를 [ 컨스트럭션 스크립트 ]에 드래그.


		2)	[ Owl 노드 ] > [ Owl 핀 ]
			----->	[ Create Dynamic Material Instance 노드 ] > [ 타깃 핀 ]
			-	[ Create Dynamic Material Instance 노드 ] > [ Element Index ]	:	[ 0 ]
		

		3)	[ Construction Script 노드 ] > [ 출력 제어 핀 ]
			----->	[ Create Dynamic Material Instance 노드 ] > [ 입력 제어 핀 ]


		4)	[ Create Dynamic Material Instance 노드 ] > [ Return Value 핀 ]
			----->	[ 변수로 승격 ]
			-	[ 이름 ]		:	[ Instance Owl ]



--------------------------------------------------
2]	날개 설정.
--------------------------------------------------

	------------
	-	개요.
	------------

		-	날개를 펴고 접는 것은 2장의 이미지를 교체하는 것.



	------------
	-	실습
	------------

		1]	[ B_Owl ] > [ Set Wing 함수 노드 ] 생성.
			
			-	[ 입력 ] / [ 출력 ]	:	[ 없음 ]


		-	이하 [ B_Owl ] > [ Set Wing ] 참고..



--------------------------------------------------
3]	배경음악 Looping 설정.
--------------------------------------------------

	------------
	-	개요.
	------------

		-	BGM 추가.

		-	BGM이 반복해서 플레이 되도록 루핑 설정.


	------------
	-	실습.
	------------

		1)	사운드 에디터 열기.
			-	[ Audios 폴더 ] > [ stage.wav ] 더블클릭

		2)	속성 갱신.
			-	[ 사운드 에디터 ] > [ 사운드 ] > [ Looping ] : On



--------------------------------------------------
4]	Audio Component 만들기.
--------------------------------------------------

	------------
	-	개요.
	------------

		-	[ Audios 폴더 ]에 있는 gameover.wav, stage.wav를
			[ B_Owl ] > [ 컴포넌트 창 ]에 드래그 하여
			[ B_Owl ]의 Audio 컴포넌트로 등록.

		-	[ 이름 ]											:	[ Game Over Sound ], [ BGM ]

			[ 디테일 창 ] > [ 활성화 ] > [ Auto Activate ]	:	[ Off ]
			-	Audio 컴포넌트 등록시 [ Auto Activate ]가 기본으로 설정됨.



--------------------------------------------------
5]	게임 시작시 배경음악 연주.
--------------------------------------------------

	------------
	-	개요.
	------------

		-	게임 시작시 BGM을 연주.
			-	[ Begin Play 이벤트 ]에서 처리.
			-	[ Activation ] > [ Auto Activate ] : On
				-	게임 시작시 자동으로 연주.
				-	작업하는 과정에도 계속 연주되므로
					작업 집중에 방해가 될수 있음.


	------------
	-	실습.
	------------

		-	[ B_Owl ] > [ 이벤트 그래프 ] > [ Begin Play 이벤트 ]에 추가.

		1)	[ 컴포넌트 창 ] > [ BGM 노드 ] 추가.

		2)	[ BGM 노드 ] > [ Play 노드 ] 추가.

		3)	[ Sky ( Set ) 노드 ] > [ 출력 제어 핀 ]
			----->	[ Play 노드 ] > [ 입력 제어 핀 ]

		4)	테스트.




--------------------------------------------------
6]	게임 오버시 처리하기.
--------------------------------------------------

	------------
	-	개요.
	------------

		-	올빼미가 화면 아래를 벗어나는 경우 게임오버 처리.
		-	게임 오버시 연출할 내용.
			-	배경음악 변경.
			-	메뉴 표시.


	------------
	-	실습.
	------------
				
		-----------------------------
		1)	게임오버 관리변수 설정하기.
		-----------------------------

			1]	올빼미의 Y 축 위치값이 화면의 하단( 화면 높이 + 80 )보다 크면
				화면 아래 밖으로 넘어갔다고 판정하여
				게임 오버 처리.
			
			2]	[ B_Owl ] > [ GetScreenPos 함수 노드 ] 열기.
						
			-	이하 [ B_Owl ] > [ GetScreenPos ] 참고..



		-----------------------------
		2)	메뉴 표시.
		-----------------------------
			
			1)	[ B_Owl ] > [ Show Menu 함수 노드 ] 생성.
				
			-	이하 [ B_Owl ] > [ Show Menu ] 참고..




		-----------------------------
		3)	게임 오버 함수 만들기.
		-----------------------------
			
			------------
			-	개요.
			------------

				-	기존 BGM 연출 중지하고 게임오버 사운드 연주후 
					메뉴 표시.
				-	[ Is Dead 노드 ]의 상태에 따라 호출되어야 하므로 
					[ Tick 이벤트 ]에서 처리.



			------------
			-	실습.
			------------

				1)	[ Set Game Over 함수 노드 ] 생성.

				-	이하 [ B_Owl ] > [ Set Game Over ] 참고..


==================================================================//