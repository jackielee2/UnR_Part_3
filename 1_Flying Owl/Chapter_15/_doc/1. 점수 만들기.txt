==================================================================
1.	점수 만들기
	[ 참고	:	https://blog.naver.com/foxmann/220289160195 ]
==================================================================

--------------------------------------------------
0]	개요.
--------------------------------------------------
	-	올빼미가 참새나 선물에 충돌하면
		화면에 표시할 감점 및 득점을 액터로 만들기.



--------------------------------------------------
1]	Text 표시.
--------------------------------------------------

	----------------
	-	개요.
	----------------

		-	화면에 글자를 표시하는 방식.
			1)	HUD( Head Up Display )			:	픽셀 단위의 화면에 비트맵이나 아웃라인 폰트로 표시.
			2)	UMG( Unreal Motion Graphic )	:	픽셀 단위의 화면에 비트맵이나 아웃라인 폰트로 표시.
													GUI 환경의 위젯 블루프린트를 이용.
			3)	Text Render						:	2D 평면에 머터리얼을 이용하여 글자 표시후
													3차원 공간에 배치.
													( 참고 : Text Render.PNG )
		-	활용.
			-	게임의 UI나 메뉴 표시
				-	HUD, UMG
				-	올빼미 게임에서는 UMG 사용.
				
			
			-	게임의 배경적인 요소, 이펙트등.
				-	Text Render.
				-	올빼미 게임에서는 이펙트로 사용.
					-	올빼미가 선물등에 충돌할때
						잠깐 보였다 사라지도록 표현.



--------------------------------------------------
2]	글꼴 추가.
--------------------------------------------------

	----------------
	-	실습.
	----------------

		0)	[ Fonts 폴더 ] 생성.

		1)	[ Fonts 폴더 ] > [ 팝업 ] > [ 고급 에셋 생성 그룹 ] >
			[ 유저 인터페이스 ] > [ 폰트 ] 클릭
			-	[ 이름 ]		:	[ ScoreFont ]

		2)	[ ScoreFont ] 더블 클릭 > [ 폰트 에디터 창 ] >
			[ 디테일 창 ] > [ Font ] > [ Font Cache Type ]	:	[ Offline ]
			-	해당 글꼴이 비트맵 폰트로 변환.
			-	한글을 사용하려면 추가절차 필요.
				-	올빼미 게임에서는 한글 사용 X

		3)	[ 폰트 캐시 유형을 변경할까요? 창 ] > [ 예 ] 선택 >
			[ 글꼴 대화 상자 ]
			-	[ 글꼴 ]		:	[ Digital-7 ] ( resource 폴더에 있던 폰트. )
				[ 크기 ]		:	[ 40 ]



--------------------------------------------------
3]	폰트 머터리얼 만들기.
--------------------------------------------------

	----------------
	-	개요.
	----------------

		-	추가한 글꼴을 처리하기 위한 머터리얼 필요.
		-	화면에 표시된 득점 텍스트가 위로 이동하면서
			[ 투명하게 사라지는 효과 ] 적용.
			-	머터리얼에서 처리해야할 기능..



	----------------
	-	실습.
	----------------

		1)	[ Materials 폴더 ] > [ M_ScoreFont 머터리얼 ] 생성. > 더블클릭
			-	[ 머터리얼 에디터 ]열기..
				-	[ 디테일 창 ] > [ 머터리얼 ]
					-	[ Blend Mode ]		:	[ Masked ]	( 투명색 적용 )
						[ Shading Model ]	:	[ Unlit ]	( 조명 연산 무시 )


		-	이하 [ M_ScoreFont ] 참고..



--------------------------------------------------
4]	Text Render 만들기.
--------------------------------------------------

	----------------
	-	개요.
	----------------

		-	점수처리를 위한 Text Render 는 블루 프린트 액터로 만듬.
	


	----------------
	-	실습.
	----------------

		1)	[ Blueprints 폴더 ] > [ B_Score ] 생성.
			-	[ 부모 클래스 ]	:	[ 액터 ]
				[ 이름 ]			:	[ B_Score ]
					

		2)	[ 컴포넌트 ] > [ Text Render ] 추가.
			-	[ 디테일 ] 정보 수정.
			-	[ 이름 ]									:	[ Score ]
				[ 트랜스폼 ] > [ 회전 ]					:	[ 0, 0, 90 ]
				[ 텍스트 ] > [ Text ]					:	[ 1000 ]
							 -	화면에 표시할 점수..
							 -	테스트 목적으로 [ 1000 ]으로 설정..

						   > [ Text Material ]			:	[ M_ScoreFont ]
							 -	텍스트에 적용할 머터리얼..

						   > [ Font ]					:	[ ScoreFont ]
							 -	글꼴..

						   > [ Horizontal Alignment ]	:	[ Center ]
							 -	수평 정렬 상태..

						   > [ Vertical Alignment ]		:	[ Text Center ]
							 -	수직 정렬 상태..

						   > [ Texter Render Color ]	:	[ 파란색. ]
						     -	글자색..

						   > [ XScale / YScale ]		:	[ 1 / 1 ]
						     -	가로 / 세로 확대 비율..

						   > [ World Size ]				:	[ 26 ]
						     -	전체 크기..

						   > [ Horiz Spacing Adjust ]	:	[ 5 ]
						     -  글자 사이 간격( 수평 )


		3)	테스트
			-	화면에 배치 후 잘 나오는지 확인.
				-	[ 위치 ]		:	[ 0, -10, 1000 ]

		


--------------------------------------------------
5]	다이나믹 머터리얼 인스턴스 만들기.
	[ 참고 : https://docs.unrealengine.com/4.27/ko/RenderingAndGraphics/Materials/MaterialInstances/ ]
--------------------------------------------------

	----------------
	-	실습.
	----------------
		
		-	[ 컨스트럭션 스크립트 ] 참고.


--------------------------------------------------
6]	타임 라인 만들기.
--------------------------------------------------

	----------------
	-	개요.
	----------------

		-	텍스트 렌더는 화면에 표시된후 0.5초후부터 1초동안 서서히
			투명하게 사라지도록 연출.
		
		-	[ 타임 라인 ]
			-	시간 기반의 애니메이션을 만드는 노드.



	----------------
	-	실습
	----------------

		1)	[ 이벤트 그래프 ]에 [ 타임 라인 ] 추가.
			-	[ 이름 ]		:	[ Text Render ]

		2)	[ Text Render ] 더블클릭 > [ 타임라인 그래프 에디터 ]

		3)	[ Float 트랙 ] 추가 > [ 타임 라인 ] 표시됨.
			-	[ 이름 ]		:	[ Alpha ]
			-	[ Alpha ]를 이용하여 폰트의 [ Alpha ]를 [ 1 -> 0 ]으로 바꿀 예정..
			
			
		4)	키프레임 추가.
			-	[ Shift + 좌클릭 ]
			-	3개 추가.
				-	( 0,	1 )
					( 0.5,	1 )
					( 1.5,	0 )

		5)	[ 자동 재생 옵션 ]	:	[ On ]
			[ 길이 ]				:	[ 1.5 ]

		6)	그래프를 리사이징.
			-	[ 리사이즈 버튼 ] 클릭




--------------------------------------------------
7]	타임 라인 노드 구성.
--------------------------------------------------

	----------------
	-	개요.
	----------------

		-	[ 이벤트 그래프 ]에 설치된 [ 타임 라인 노드 ] 구성.

		-	[ 자동 재생 ]옵션을 On으로 해두었으므로
			다른 이벤트를 연결해주지 않아도 스스로 작동.



	----------------
	-	실습.
	----------------

		-	이하 [ 이벤트 그래프 ] > [ Text Render 노드 ] 참고.




--------------------------------------------------
8]	점수 움직이기.
--------------------------------------------------

	----------------
	-	개요.
	----------------

		-	화면에 표시된 점수는 위로 천천히 이동하면서 사라지도록 한다.



	----------------
	-	실습
	----------------

		-	이하 [ 이벤트 그래프 ] > [ Text Render 노드 ] 참고.




--------------------------------------------------
9]	Text Render에 점수 설정.
--------------------------------------------------

	----------------
	-	개요.
	----------------

		-	올빼미가 참새나 선물과 충돌시 점수가 결정됨.
			-	점수를 설정하는 기능 필요.



	----------------
	-	실습
	----------------

		-	이하 [ B_Score ] > [ Set Score 함수 ] 참고.



==================================================================//