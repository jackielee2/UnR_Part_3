==================================================================
1. 게임 배경(Sky) 만들기 - B_Sky
	[ 참고	:	https://blog.naver.com/foxmann/220265656202
				https://blog.naver.com/foxmann/220268926222
				https://m.blog.naver.com/destiny9720/220895498028
				https://docs.unrealengine.com/ko/Gameplay/Framework/Controller/PlayerController/index.html
				https://docs.unrealengine.com/en-US/BlueprintAPI/Game/Player/SetViewTargetwithBlend/index.html
				https://docs.unrealengine.com/ko/Engine/Blueprints/UserGuide/UserConstructionScript/index.html
				https://you-rang.tistory.com/361 ]
==================================================================
--------------------------------------------------
1]	새 블루 프린트 만들기.
--------------------------------------------------

	--------------
	-	실습.
	--------------
	
		0)	[ 콘텐츠 창 ] > [ Blueprints 폴더 ] 생성.

		1)	[ 콘텐츠 창 ] > [ 마우스 우클릭 ]	> [ 팝업 ] >
			[ 그룹 : 기본 에셋 생성 ]	> [ 블루 프린트 클래스 ] 선택 >
			[ 부모 클래스 선택 창 ] > [ 그룹 : 일반 클래스 ] > [ 액터 ] 선택.
			-	[ 이름 ]		:	[ B_Sky ]

		2)	[ B_Sky ]열기..

		3)	[ 루트 ] 추가.
			-	개요.
				-	컴포넌트
					-	블루 프린트의 구성요소.
					-	액터에 사용할 수 있게 규격화된 기능 모듈.
				-	루트
					-	최상위 계층 컴포넌트.
					-	트랜스폼 정보에 스케일 요소만 있음.
						-	위치나 회전 변경 불가능.
						-	스케일 수정시 
							하위 컴포넌트의 스케일에도 영향.

			-	현재버전( 4.25.3 )에는 [ DefaultSceneRoot ]가 
				자동으로 추가되어 있음.

		4)	[ Static Mesh ] 추가.
			-	[ 컴포넌트 창 ] > [ +컴포넌트 추가 ] 클릭	:	[ Static Mesh ]
				-	[ 이름 ]		:	[ Sky ].
				-	[ 디테일 창 ] > [ Static Mesh ] > [ Static Mesh ]	:	[ Quad 메쉬 ]
								   [ 머터리얼 ] > [ 엘리먼트 0 ]			:	[ M_Sky ]
								   [ 트랜스폼 ] > [ 위치 ]				:	[ 0, -100, 0 ]
											   > [ 스케일 ]				:	[ 20, 1, 14 ]
																			-	게임 화면 배경에 꽉차도록 설정.
		5)	[ 카메라 ] 추가.

			-	[ 카메라 컴포넌트 ]
				-	게임 화면을 모니터에 반영.

			-	[ 컴포넌트 창 ] > [ +컴포넌트 추가 ] 클릭							:	[ Camera ]
				-	[ 디테일 창 ] > [ 트랜스폼 ] > [ 위치 ]						:	[ 0, 500, 0 ]
											   > [ 회전 ]						:	[ 0, 0, -90 ]
								   [ Camera Settings ] > [ Projection Mode ]	:	[ Orthographic ] ( 원근감 무시 )
													   > [ Ortho Width ]		:	[ 1800 ]
																					-	화각,일종의 Field Of View.
																					-	값이 크면 오브젝트가 작게 나타남.						

		6)	[ 컴파일 ]
			-	블루 프린트로 작업이 완료되면 꼭 컴파일을 할 것.

		7)	맵에 배치
			-	[ B_Sky ]를 [ Main 맵 ]에 드래그.
		
		8)	실행 및 테스트
			-	[ 툴바 ] > [ 플레이 버튼 ]
			-	[ WASD ], [ 마우스로 드래그 ] 하면 [ 카메라 이동 ] 및 [ 회전 ].
				-	[ Player Controller ]
					-	플레이어에게 받은 입력을 이동, 아이템 사용, 무기 발사와 같은
						동작으로 변환하는 인터페이스.
				-	현재 게임의 성격상 카메라가 움직이면 안됨.
		
		9)	카메라 고정 처리.
			1)	[ B_Sky 블루프린트 ] > [ 이벤트 그래프 ] 선택
			
			2)	[ Set View Target with Blend 노드 ] 추가.
				https://docs.unrealengine.com/4.26/en-US/BlueprintAPI/Game/Player/SetViewTargetwithBlend/

				-	[ 마우스 우클릭 ] > [ 팝업 ] > [ 컨텍스트에 따라 체크 해제 ] > [ Set View Target with Blend 노드 ] 추가.

				-	관찰대상 선택.
					-	[ 타깃 ]					:	[ Player Controller ]
													-	https://docs.unrealengine.com/4.26/ko/InteractiveExperiences/Framework/Controller/PlayerController/
														https://hombody.tistory.com/220

					-	[ New View Target ]		:	관찰대상으로 설정할 액터.
					-	[ Blend Time ]			:	설정한 관찰대상으로 전이되는 시간.
			
			3)	[ Get Player Controller 노드 ] 추가.
				-	[ Player Controller ] 기능 참조하기.
			
			4)	[ Get Player Controller 노드 ] > [ 출력핀 ]	------------> [ Set View Target with Blend 노드 ] > [ 타깃 핀 ]

			5)	[ Self 노드 ] 추가.
				-	해당 블루프린트의 레퍼런스.
				-	클래스의 this와 유사한 역할.

			6)	[ Self 노드 ] > [ 출력핀 ] ------------> [ Set View Target with Blend 노드 ] > [ New View Target 핀 ]

			7)	[ BeginPlay 이벤트 노드 ] > [ 출력 제어핀 ] ---------------------> [ Set View Target with Blend 노드 ] > [ 입력 제어핀 ]

			8)	실행 및 테스트.
			
--------------------------------------------------
2]	배경하늘 스크롤 속도 설정.
--------------------------------------------------

	-	개요
		-	[ B_Sky ]는 [ M_Sky ]의 [ Speed ]를 통하여 스크롤 속도를 설정.

	-------------------------------
	-	변수 추가.
		( 참고 : 변수 추가.jpg )
	-------------------------------

		-	실습.

			-------------
			1)	[ 이름 ]					:	[ SkySpeed ]
				-	한글,공백 가능.
				-	가급적 한글은 지양.


			-------------
			2)	[ 유형 ]					:	[ 플로트( float ) ]
				-	단일 변수, 배열, 세트, 맵 등으로도 관리 가능.


			-------------
			3)	[ 인스턴스 편집 가능 ]		:	[ On ]
				-	언리얼 에디터의 디테일 탭이나 다른 블루프린트에서
					해당 변수의 접근을 허용.
					-	[ 읽기 / 쓰기 ] 허용.
				-	체크하면 [ 내 블루프린트 ] > [ 변수 ] 목록에
					[ 눈동자 모양의 아이콘 ] 표시됨.


			-------------
			4)	[ 스폰시 노출 ]				:	[ On ]
				-	언리얼 에디터의 [ 디테일 창 ]에 변수 노출 여부 설정.


			-------------
			5)	[ 카테고리 ]					:	[ Speed ]
				-	언리얼 에디터의 [ 디테일 창 ]에 변수를 표시할 카테고리.


			-------------
			6)	[ 슬라이더 범위 / 값 범위 ]	:	[ -2, 2 ]
				-	언리얼 에디터의 [ 디테일 창 ]에 변수 값을 설정할 
					슬라이더와 값의 범위.


			-------------
			7)	[ 기본값 ]					:	[ 1 ]
				-	변수 초기값 설정.
				-	블루 프린트를 컴파일해서 성공적으로 완료가 되면
					노출됨.



	-------------------------------
	-	[ 컨스트럭션 스크립트 ] 만들기.
	-------------------------------

		-	개요

			-	[ 컨스트럭션 스크립트 ]
				-	액터가 레벨에 배치될 때 자동으로 실행.
					-	클래스의 생성자와 유사.
				-	[ 블루프린트 클래스 ]에만 존재

			-	배경하늘의 스크롤 속도 설정.
				-	[ B_Sky ]를 [ 레벨 ]에 배치한 후 [ 디테일 창 ]에서 설정할 것임.
			



		-	실습.
			
			1)	변수 목록( 또는 컴포넌트 목록 )에서 [ Sky ]를
				[ Construction Script ]그래프 패널로 드래그 하여
				Get 노드 선택.
				-	[ Ctrl ] + 드래그	:	Get 노드
					[ Alt ] + 드래그		:	Set 노드

			2)	*[ 다이나믹 머터리얼 인스턴스 ] 만들기.
				-	*다이나믹 머터리얼
					-	파라미터( 매개변수 )가 있는 머터리얼.
					-	실시간으로 정보가 변할 수 있는 머터리얼.
					-	파라미터에 값을 전달하려면 인스턴스가 필요.
				-	[ Create Dynamic Material instance 노드 ] 생성 후
					[ Sky ] > [ 출력핀 ]		------->	[ Create Dynamic Material instance 노드 ] > [ 타깃 ]

			3)	Scalar 파라미터 노드 추가.
				-	[ Create Dynamic Material instance 노드 ] > [ Return Value ] 드래그 & 버튼업	> [ 팝업 ] >
					"scalar" 검색 > [ Set Scalar Parameter Value 노드 ] 추가.

			4)	[ Set Scalar Parameter Value 노드 ] 설정
				-	[ Parameter Name ]	:	[ "Speed" ] ( [ M_Sky ]에서 설정한 이름. )
					[ Value ]			:	[ SkySpeed 변수 ] 연결.

			5)	제어 연결 및 컴파일
				-	[ Construction Script ] > [ 출력 제어 핀 ] -------------> [ Create Dynamic Material instance 노드 ] > [ 입력 제어 핀 ]
				-	컴파일.

			6)	테스트
				-	[ Main 레벨 ] > [ 월드 아웃라이너 ] > [ B_Sky ] 선택 > 
					[ Speed ] > [ Sky Speed ] 수치를 바꿔가며 확인.


==================================================================//