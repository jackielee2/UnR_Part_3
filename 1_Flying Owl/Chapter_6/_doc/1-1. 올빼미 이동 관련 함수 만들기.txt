==================================================================
1-1.	올빼미 이동 관련 함수 만들기
	[ 참고	:	https://blog.naver.com/foxmann/220271142949
				https://blog.naver.com/foxmann/220272262803
				https://hombody.tistory.com/189 ]

==================================================================
---------------------------------
0]	 개요.
---------------------------------

	-	실제 게임에 사용할 나뭇가지 배치.	
	-	게임 환경 설정.
		-	올빼미		:	( 0, 0, 55 )
			나뭇가지1	:	( 0, -20, 0 )
			나뭇가지2	:	( 0, -20, 300 )
			나뭇가지3	:	( 0, -20, 600 )

		-	[ B_Sky ] 편집..

			-	[ 컴포넌트 창 ] > [ Camera 컴포넌트 ]
				-	[ 디테일 ] > [ 트랜스폼 ] > [ 위치 ]				:	[ 0, 500, 320 ]
								 [ 카메라 세팅 ] > [ Ortho Width ]	:	[ 1400 ]
							   
			-	[ 컴포넌트 창 ] > [ Sky 컴포넌트 ]
				-	[ 디테일 ] > [ 트랜스폼 ] > [ 위치 ]				:	[ 0, -100, 320 ]
											   [ 스케일 ]			:	[ 15, 1, 8 ]



---------------------------------
1]	 [ B_Branch ] 태그 추가.
---------------------------------

	-------------
	-	개요.
	-------------

		-	[ 태그 ]

			-	탐지한 오브젝트 판별용.
			-	언리얼은 여러개의 태그를 설정할 수 있도록 스트링 배열로 취급.
			-	액터가 씬에 배치될때 한번만 설정하면 됨.
				-	주로 [ 컨스트럭션 스크립트 ]에서 설정.
			-	태그 이름은 변수명 등과 구분하기 위해 대문자 사용 권장.



	----------------------
	-	실습.
	----------------------
		-	[ B_Branch ] > [ 컨스트럭션 스크립트 ] 참고..




---------------------------------
2]	 물체 탐색.
---------------------------------

	--------------
	-	개요.
	--------------

		-	방법
					
			1)	충돌 이벤트
		
				-	액터가 충돌하면 충돌 이벤트로 충돌 대상 정보를 얻을 수 있음.
				-	올빼미의 경우, 자신의 위, 옆에 있는 다른 물체와도 충돌이 가능하므로
					충돌한 나뭇가지가 발아래에 있는지를 판정하는 추가 과정이 필요.


			
			2)	레이 트레이싱 ( 광선 추적 )
			
				-	탐색할 방향으로 광선을 투사하여 그 광선에 부딪히는 물체 탐지.
				-	직선, 박스, 구 모양으로 광선을 투사할 수 있음.
				-	올빼미의 경우, 자신의 아래쪽에 있는 나뭇가지만 식별.
					->	[ 레이 트레이싱 ]이 적당.

---------------------------------
3]	 트레이스 채널 만들기.
---------------------------------

	---------------
	-	개요.
	---------------

		-	[ 레이 트레이싱 ]과 [ 콜리전 ] 속성.

			-	[ 레이트레이싱 ]은 [ 투사한 광선 ]에 닿는 [ 콜리전 ]을 탐색.
			-	[ 콜리전 ]의 속성이 [ Block ]인 것만 탐지.
				-	콜리전의 기본속성은 [ OverlapAllDynamic ] 이므로
					탐지 대상에서 제외.

					-	[ BlockAll ] 이나 [ BlockAllDynamic ] 으로 바꿀수도 있으나
						올빼미가 머리위의 나뭇가지와 충돌할 경우 블록될 가능성 있음.
					
					-	NoCollision	:	충돌 검출 없음.
						Block		:	막힘
						Overlap		:	막히지 않으며 겹치는지 여부 판정.

		-	[ 트레이스 채널 ]
			-	탐지 대상의 콜리전을 선별적으로 설정.

	-	실습.
		1)	[ 메뉴 ] > [ 편집 ] > [ 환경설정 그룹 ] > [ 프로젝트 세팅 ]

		2)	[ 프로젝트 세팅 창 ] > [ 엔진 ] > [ 콜리전 ] > [ Trace Channels ] > [ 새 트레이스 채널 버튼 ] 클릭.

		3)	[ 새 채널 창 ] 설정.
			-	[ 이름 ]			:	[ Trigger ]
				[ 기본 반응 ]	:	[ Block ]

		4)	[ 새 채널 창 ] > [ 수락 버튼 ] 클릭.


---------------------------------
4]	 올빼미 점프 함수 만들기.
---------------------------------

	---------------
	-	개요.
	---------------

		-	올빼미가 발밑의 나뭇가지를 탐지하면 점프.



	---------------
	-	실습.
	---------------

		1)	[ B_Owl ] 열기 & [ JumpOwl 함수 노드 ] 생성.
			-	[ 입력 / 출력 ]	:	[ 없음 ]


		2)	[ SpeedJump 변수 노드 ( Get ) ] 추가.
			-	점프 속도.


		3)	[ DirZ 변수 노드 ( Get ) ] 추가.
			-	상하 이동 방향 및 속도.

		-	이하 [ B_Owl ] > [ JumpOwl 함수 노드 ] 참고..


	---------------
	-	함수 설명.
	---------------

		-	[ DirZ ]에 점프 속도 할당.
			추후 올빼미를 이동하는 함수에서 참조.
		-	올빼미의 위치에서 점프 사운드 연출.


---------------------------------
5]	 나뭇가지 탐지 함수 만들기.
---------------------------------

	---------------
	-	실습
	---------------

		1)	[ Check Branch 함수 노드 ] 생성.
			-	[ 입력 / 출력 ]	:	[ 없음 ]

		-	이하 [ B_Owl ] > [ Check Branch ] 참고..




---------------------------------
6]	 화면 크기 구하기.
---------------------------------

	--------------
	-	개요.
	--------------

		-	올빼미가 이동할 때 화면의 좌우를 벗어나지 않도록 하기위해
			화면의 크기를 구할 필요가 있음.


	--------------
	-	실습.
	--------------

		1)	[ Get Screen Size 함수 노드 ] 생성.
			-	[ 입력 / 출력 ]	:	[ 없음 ]

		2)	[ Screen Width ( Set ) 노드 ] 추가.
		
		3)	[ Screen Height ( Set ) 노드 ] 추가.

	-	이하 [ B_Owl ] > [ Get Screen Size ] 참고..


---------------------------------
7]	 올빼미 Screen 좌표 구하기.
---------------------------------

	--------------
	-	개요.
	--------------

		-	게임이 실행되는 디바이스의 화면 크기는 서로 다를 수 있음.
		-	올빼미의 월드 좌표를 픽셀 단위인 스크린 좌표로 바꿀 필요 있음.



	--------------
	-	실습.
	--------------

		1)	[ GetScreenPos 함수 노드 ] 생성.
			-	[ 입력 / 출력 ]	:	[ 없음 ]

		2)	[ Screen X 노드 ( Set ) ] 추가.

		3)	[ Screen Y 노드 ( Set ) ] 추가.

		-	이하 [ B_Owl ] > [ Get Screen Pos ] 참고..
			


==================================================================//