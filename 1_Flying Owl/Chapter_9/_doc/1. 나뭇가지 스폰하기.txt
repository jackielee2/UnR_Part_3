==================================================================
1.	나뭇가지 스폰하기
	[ 참고	:	https://blog.naver.com/foxmann/220275972408 ]

==================================================================

-----------------------------------------
0]	개요.
-----------------------------------------

	-	올빼미가 점프해서 위로 올라가면 계속해서 새로운 나뭇가지를 스폰.



-----------------------------------------
1]	[ Spawn Point ] 설치.
-----------------------------------------

	-------------
	-	개요.
	-------------

		-	[ 스폰 포인트 ]
			-	게임에서 오브젝트가 나타날 위치.

		-	나뭇가지는 [ B_Sky ]에서 만들 것이므로
			[ B_Sky ]에 새로운 나뭇가지가 나타날 위치( 스폰 포인트 )를 미리 설정.



	-------------
	-	실습.
	-------------

		1)	[ B_Sky ] > [ 뷰포트 ] > [ 컴포넌트 창 ] > [ +컴포넌트 추가 버튼 ] 클릭.

		2)	[ Arrow ] 검색 & 추가.
			-	게임 실행 중에는 보이지 않음.
			-	[ Arrow ]의 위치를 참조하여 새로운 나뭇가지 생성할 것임.

			-	[ 이름 ]		:	[ Spawn Point ]
				[ 위치 ]		:	[ 0, -20, 900 ]

			-	맵에 배치된 나뭇가지의 높이가 각각 0, 300, 600이므로
				간격을 균등하게 맞췄음.



--------------------------------------------------
2]	나뭇가지 변수 만들기.
--------------------------------------------------

	-------------
	-	개요.
	-------------

		-	게임 시작시 나뭇가지를 만들고 변수로 등록.

		-	변수로 등록한 나뭇가지와 [ Spawn Point 컴포넌트 ]의 높이를 비교하여
			나뭇가지를 추가로 만들어야하는지 판정.

		-	[ B_Sky ] > [ Begin Play 이벤트 노드 ] 끝에 추가.



	-------------
	-	실습.
	-------------

		-	[ B_Sky ] > [ Begin Play 이벤트 노드 ] 참고..




--------------------------------------------------
3]	새로 추가할 나뭇가지 좌표 구하기.
--------------------------------------------------

	-------------
	-	개요.
	-------------

		-	나뭇가지의 X좌표를 랜덤하게 처리.



	-------------
	-	실습.
	-------------


		1)	[ B_Sky ] > [ Get Branch Location 함수 노드 ] 생성.
			-	[ 입력 ]		:	[ 없음 ]
				[ 출력 ]
				-	[ 이름 ]		:	[ Return Value ]
					[ 변수유형 ]	:	[ Vector ]


		-	이하 [ B_Sky ] > [ Get Branch Location ] 참고..




--------------------------------------------------
4]	나뭇가지를 새로 추가할지 체크하기.
--------------------------------------------------

	-------------
	-	개요.
	-------------

		-	올빼미 점프	->
			[ B_Sky ] 점프 ->
			[ Spawn Point ] 점프.

		-	나뭇가지의 수직간격이 300이므로
			[ Spawn Point ]의 Z좌표가
			마지막 나뭇가지의 Z좌표 + 300보다 크면
			해당 좌표에 새로운 나뭇가지 생성.


	-------------
	-	실습.
	-------------

		1]	[ B_Sky ] > [ Check New Branch 함수 노드 ] 생성.
		
			-	[ 입력 ]		:	[ 없음 ]
				[ 출력 ]
				-	[ 이름 ]			:	[ Can Branch ]
					[ 변수 유형 ]	:	[ Boolean ]

		-	이하 [ B_Sky ] > [ Check New Branch ] 참고..



--------------------------------------------------
5]	새로운 나뭇가지 만들기.
--------------------------------------------------

	-------------
	-	개요.
	-------------

		-	위에서 작성한 함수노드를 사용하여
			실제 새로운 나뭇가지를 생성하는 함수 작성.

			

	-------------
	-	실습.
	-------------

		1]	[ B_Sky ] > [ Make New Branch 함수 노드 ] 생성.
			
			-	[ 입력 ] / [ 출력 ]	:	[ 없음 ]

		-	이하 [ B_Sky ] > [ Make New Branch ] 참고..




--------------------------------------------------
6]	화면 아래 나뭇가지 제거하기
--------------------------------------------------

	-------------
	-	개요.
	-------------

		-	올빼미가 나뭇가지를 점프할 때마다
			생성된 나뭇가지 오브젝트들이 [ 월드아웃라이너 ]에 누적됨.
		-	메모리가 누적될수록 게임의 퍼포먼스에 영향을 끼칠수 있음.
		-	필요없는 나뭇가지는 제거.



	-------------
	-	실습.
	-------------

		-	[ B_Branch ] > [ Check Destroy 함수 노드 ] 생성.

			-	[ 입력 ] / [ 출력 ]	:	[ 없음 ]


		-	이하 [ B_Branch ] > [ Check Destroy ] 참고..



--------------------------------------------------
7]	참고...
--------------------------------------------------

	-	모듈화..

		-	처리해야할 프로세스를 기능별로 작은 단위로 쪼개어
			독립적인 것으로 만드는 것.

		-	함수, 클래스 등.




	-	장점

		-	소스 이해도 증가.
			-	함수나 클래스의 이름을 보고
				소스의 흐름이나 역할 파악 가능.

		-	확장성 증가.
			-	필요한 경우, 함수나 클래스등을 새로 만들어서 추가.

		-	프로그램 수정 용이.
			-	해당 기능을가진 함수나 클래스만 작업하면 됨.

		-	재생산성 증가.
			-	다른 프로젝트에서 원하는 함수 활용 가능.

==================================================================//