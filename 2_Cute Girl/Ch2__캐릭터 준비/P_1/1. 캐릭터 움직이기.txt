==================================================================
1. 캐릭터 움직이기.
	[ 참고 : 초보자를 위한 언리얼 엔진 4 ]

	-	위 책의 내용을 바탕으로 게임을 만들면서 언리얼을 익힙니다.
==================================================================
-----------------------------------
0]	개요
-----------------------------------

	-	이벤트
		-	프로그램에 의해 감지되고 처리될 수 있는 동작이나 사건.
		-	주로 입력이나, 오브젝트간의 상호관계에서 호출되는 기능등.
			-	예)	버튼 입력 이벤트, 충돌 이벤트 등.

	-	키 입력 이벤트 발생시 캐릭터를 움직이는 처리를 한다.

	-	액션 매핑 추가.
		-	입력의 Press / Release 상태 파악.
		
		1)	[ 메뉴 ] > [ 편집 ] > [ 프로젝트 세팅 ] 열기.

		2)	[ 프로젝트 세팅 ] > [ 엔진 ] > [ 입력 ] 선택.

		3)	[ 바인딩 ] > [ 액션 매핑 ] > [ + 버튼 ] 클릭.

		4)	[ 새 액션 매핑 ]		:	Jump 입력.
			[ + 버튼 ] 클릭		:	키보드 / 스페이스바.

	-	축 매핑 추가.		
		-	입력 발생	:	설정된 값이 반환
			입력 없음	:	0.0 반환.
			-	float 값으로 처리.

		1)	[ 메뉴 ] > [ 편집 ] > [ 프로젝트 세팅 ] 열기.

		2)	[ 프로젝트 세팅 ] > [ 엔진 ] > [ 입력 ] 선택.

		3)	[ 바인딩 ] > [ 축 매핑 ] > [ + 버튼 ] 클릭.

		4)	[ 새 축 매핑 ]		:	MoveForward
			[ + 버튼 ] 클릭		:	키보드 / W
				-	스케일		:	1.0
			[ + 버튼 ] 클릭		:	키보드 / S
				-	스케일		:	-1.0

		4)	[ 새 축 매핑 ]		:	MoveRight
			[ + 버튼 ] 클릭		:	키보드 / A
				-	스케일		:	-1.0
			[ + 버튼 ] 클릭		:	키보드 / D
				-	스케일		:	1.0



-----------------------------------
1]	캐릭터 블루프린트 설정.
-----------------------------------
	
	1)	[ 콘텐츠 창 ] > [ Blueprints 폴더 ] 선택

	2)	[ 블루프린트 클래스 ] > [ Character ] 선택.
		-	이름		:	BP_Character

		-	주요 부모 클래스.

			-	액터
				-	레벨에 배치할 수 있는 클래스의 부모. 가장 기본적인 클래스.

			-	폰
				-	액터 클래스의 자식 클래스.
				-	레벨에 배치 가능하며 플레이어의 동작에 따라움직일 수 있는 클래스.

			-	캐릭터
				-	폰 클래스의 자식 클래스.
				-	사람 모양을 전제로 하는 특수한 클래스.
			
			-	플레이어 컨트롤러
				-	폰이나 캐릭터 클래스를 조작하기 위한 클래스.
				-	예)	여러 캐릭터가 있을 때 플레이어의 입력에 따라 캐릭터를 바꾸고 싶은 경우.

			-	게임 모드 베이스.
				-	게임의 규칙을 정의하는 클래스.
				-	예)	점수, 클리어 조건, 게임 오버 조건 등.

			-	액터 컴포넌트
				-	액터에 기능( 컴포넌트 )을 추가할 경우 사용.
				-	액터에 기능을 추가하는 것이 목적.
					-	레벨에 배치 불가.

			-	씬 컴포넌트.
				-	액터 컴포넌트와 유사.
				-	특히 트랜스폼 정보를 다룰 경우 사용.



	3)	블루프린트 에디터 열기
		-	[ BP_Character ] 더블클릭.

	4)	[ 컴포넌트 창 ] > [ Mesh ] 선택.

	5)	[ 디테일 ] > [ 메시 ] > [ Skeletal Mesh ]	:	Liz_Model.



-----------------------------------
2]	캐릭터 콜리전 설정.
-----------------------------------

	0)	개요
		-	콜리전
			-	충돌 판정을 처리하는 컴포넌트
			-	주황색 캡슐.

	1)	캐릭터 콜리전 설정.
		
		1)	[ 컴포넌트 창 ] > [ Mesh ] 선택.

		2)	[ 디테일 ] > [ 트랜스폼 ]		>	[ 위치 ]	> Z		:	-65
											[ 회전 ]	> Z		:	-90
											-	최상위 부모 컴포넌트( Capsule Component )와 Mesh의 방향을 일치.

		3)	[ 컴포넌트 창 ] > [ Capsule Component ] 선택.

		4)	[ 디테일 ] > [ Shape ] 설정.
			-	Capsule Half Height( 충돌 판정 높이 )		:	78
				Capsule Radius( 충돌 판정 폭 )			:	34
		


-----------------------------------
3]	카메라 설정.
-----------------------------------

	0)	개요.
		-	게임 화면은 카메라 컴포넌트의 시점과 동일.

	1)	카메라 설정.
		
		0)	[ Spring Arm ] 추가.

			[ 컴포넌트 창 ] > [ 컴포넌트 추가 ] > [ Spring Arm ] 추가.
			-	이름		:	Camera Boom
			-	Spring Arm
				-	카메라의 방향이나 위치를 조정하는 컴포넌트.
				-	카메라와 카메라가 비추는 대상 액터의 위치를 조정하거나
					대상 액터가 회전할 때 카메라를 제어.

		1)	카메라 추가.

			-	[ 컴포넌트 창 ] > [ Camera Boom ] 선택 후 
				[ 컴포넌트 창 ] > [ 컴포넌트 추가 ] > [ Camera ] 추가.
				-	[ Camera Boom ]의 자식으로 적용.
				-	[ Camera Boom ]의 뒤쪽에 배치됨.

		2)	캐릭터 회전 적용.

			1)	[ 컴포넌트 창 ] > [ Character Movement ] 선택.

			2)	[ 디테일 ] > [ Character Movement ( Rotation Settings ) ]
				-	Orient Rotation to Movement	:	체크.
					-	캐릭터가 방향을 바꾸어 이동할 때 이동방향으로 회전하도록 설정.

		3)	[ 컴포넌트 창 ] > [ BP_Character ] 선택.

			-	[ 디테일 ] > [ Pawn ] > [ Use Controller Rotation Yaw ]		:	체크 해제.
				-	[ 플레이어 컨트롤러 클래스 ]를 상속하여 블프를 만들었을때
					블프에서 설정한 회전 정보를 이용할지에 대한 설정.
				-	[ 플레이어 컨트롤러 클래스 ]를 상속받지 않았으므로
					체크 해제.

		4)	카메라 트랜스폼 조정
			-	[ 컴포넌트 창 ] > [ Camera Boom ] 선택.
				-	[ 디테일 ]	>	[ 트랜스폼 ]		>	[ 위치 ]		>	[ Z ]	:	300
									[ Camera ]		>	[ Target Arm Length ]	:	300
									[ Camera Settings ]		>	[ Use Pawn Conotrol Rotation ]	:	체크.
																-	컨트롤러 회전에 맞춰서 스프링암을 회전 시킬지 여부 설정.
															>	[ Inherit Yaw ]					:	체크.
															>	[ Inherit Pitch ]				:	체크 해제.
															>	[ Inherit Roll ]				:	체크 해제.
			-	[ 컴포넌트 창 ] > [ Camera ] 선택.
				-	[ 디테일 ]	>	[ 트랜스폼 ]		>	[ 회전 ]		>	[ Y ]	:	320
									[ Camera Options ]	>	[ Use Pawn Control Rotation ]	:	체크 해제 확인.
									-	[ Camera Boom ] > [ Use Pawn Control Rotation ]이 체크되어 있기때문...
				
		5)	컴파일 및 저장.								
													
		

-----------------------------------
4]	게임 모드 생성.
-----------------------------------		

	0)	개요.		
		-	게임이 시작되면 게임 모드 클래스를 이용하여 플레이어 액터를 생성한다.
		-	게임 모드 클래스.
			-	게임 시스템 등 게임 전반의 설정을 관리하는 클래스.

	1)	실습.
		
		1)	[ 콘텐츠 창 ] > [ Blueprints 폴더 ] 선택.

		2)	블루 프린트 클래스 생성.
			-	부모		:	GameMode Base.
				이름		:	BP_MyGameMode

		3)	[ BP_MyGameMode ] 더블 클릭.
			-	[ 디테일 ] > [ Classes ] > [ Default Pawn Class ]	:	BP_Character.
				-	[ Default Pawn Class ]	:	게임을 플레이할 때 생성할 액터의 종류.

		4)	[ 메뉴 ] > [ 창 ] > [ 월드 세팅 ] 선택.
			-	[ 월드 세팅 창 ] > [ Game Mode ] > [ 게임 오브라이드 ]		:	BP_MyGameMode.

		5)	플레이 및 테스트.
			-	화면에 캐릭터가 배치된 것 확인.



-----------------------------------
5]	캐릭터 생성 위치 설정.
-----------------------------------

	-	Player Start
		-	Game Mode 클래스를 부모로 하는 블루 프린트에서
			캐릭터의 생성 기준이 되는 액터.
		-	Default 레벨에서는 기본값으로 지원.
		-	레벨에 Player Start 액터가 없으면 (0, 0, 0)의 위치에 생성됨.




==================================================================//