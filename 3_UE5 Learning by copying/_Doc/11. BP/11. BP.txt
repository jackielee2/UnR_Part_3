==============================================================================
11. BP..
==============================================================================

	------------------
	-	블루프린트란..
	------------------

		-	게임에서 프로그램의 역할..

			-	오브젝트간의 상호작용,
				오브젝트 입력 처리, 게임 규칙,
				기타 시스템 처리 등을 담당..
		
		-	시각적인 부품을 배치하고
			연결하는 방식으로 프로그램을
			작성해나가는 기능..
			-	비쥬얼 스크립팅..


	---------------
	-	BP 맛보기..
		참고 :	[ _BP ]
				> [ Simple_BP_1.umap ]
	---------------

		------------------------
		1)	새로운 레벨 만들기..
		------------------------

			-	템플릿..
				-	[ Basic ]

			-	이름..
				-	"Simple_BP_1"..



		-----------------
		2)	카메라 준비..
		-----------------
					
			-	마우스와 키보드로
				액터를 조정..

			-	카메라는 고정..

			----------
			-	적용..
			----------

				1)	[ 월드 세팅 ]
					> [ Game Mode ]
					> [ 게임모드 오버라이드 ]
						-	[ MyGameMode1 ]


				2)	[ 월드 세팅 ]
					> [ 선택된 게임 모드 ]
					> [ 디폴트 폰 클래스 ]
						-	[ 없음 ]


				3)	카메라 액터 배치..

					-	[ 툴바 ]
						> [ +버튼 ]
						> [ 모든 클래스 ]
							-	[ 카메라 액터 ]
								-	위치..
									-	( 0, 0, 170 )


				4)	[ CameraActor ]
					> [ 디테일 ]
					> [ 자동 플레이어 활성화 ]
					> [ 플레이어 자동 활성화 ]
						-	[ Player 0 ]

					
				4)	BP로 조작할 액터 준비..
					-	[ 액터 배치 ]
						> [ 셰이프 ]
						> [ 스피어 ]를 
						적당한 위치에 배치..

					-	[ 스피어 ]
						> [ 트랜스폼 ]
						> [ 모빌리티 ]
							-	[ 무버블 ]
								-	이동 가능..


				5)	머터리얼 설정..
					
					-	[ 콘텐츠 브라우저 ]
						> [ StarterContent ]
						> [ Materials ]
							-	적당한 머터리얼을 골라
								[ 스피어 ]에 드롭..

		
		------------------
		3)	레벨 BP 생성..
		------------------

			-	레벨 BP..

				-	레벨 단위의 글로벌 이벤트 그래프
					역할을 하는 특수한 형태의
					블루프린트..

				-	레벨 전체적으로 관련된 이벤트 또는
					레벨 내 특정 액터 인스턴스가
					함수 호출이나 흐름 제어 연산 형태로
					일련의 동작을 발동시키는 데 사용..

					
			-	적용..

				-	[ 툴바 ]
					> [ 블루프린트 아이콘 ]
					> [ 레벨 블루프린트 열기 ] 선택..



			-	BP 에디터..

				-	주요 구성..

					-	이벤트 그래프..
						-	노드를 배치해서
							프로그래밍 하는 공간..

						-	기본적으로 두 개의
							이벤트 노드가 생성되어 있음..

							-	[ Event BeginPlay ]
								-	게임이 시작되었음을
									알려주는 이벤트 노드..

							-	[ Event Tick ]
								-	화면에 한 프레임을
									출력할 때마다 호출되는
									이벤트 노드..

					-	내 블루프린트..
						-	프로그래밍에서 사용하는
							변수나 함수등을 관리하는
							공간..
						
					-	디테일..
						-	선택한 노드의 설정 등을
							표시하는 공간..



		--------------
		4)	프로그램과
			이벤트..
		--------------
		
			----------
			-	개요..
			----------

				-	BP를 이용한 간단한
					메시지 표시..

				-	필요한 것..

					1)	메시지를 표시하는 프로그램..
					2)	1) 프로그램을 실행..
						-	언리얼의 경우
							대부분의 프로그램은
							이벤트가 발생했을 때
							호출 됨..

							-	이벤트..
								-	다양한 조작이나 상황에 대응해서
									발생하는 신호와 유사한 것..
									예)	게임 시작, 마우스 조작,
										버튼 클릭, 액터 충돌 등..
										-	레벨에 어떤 사건이
											발생하면 그에 대응하는
											이벤트를 발생 시킴..

				-	블루프린트에는 각각의
					이벤트를 포착하는
					노드가 있음..

				-	이벤트 처리 구조..

					1)	이벤트 발생..
					2)	해당 노드가 이벤트를 포착..
					3)	노드에 연결된 처리를 실행..


			----------
			-	적용..
			----------

				1)	[ Print String ] 노드 추가..

					-	[ 이벤트 그래프 ]
						> [ 마우스 우클릭 ]
						> [ 개발 ]
						> [ 에디터 ]
						> [ Print String ] 선택..

					-	[ 개발 전용 ]

						-	개발하는 동안에만 사용 가능..
						-	앱으로 빌드한 이후에는
							작동하지 않음..

					-	텍스트 설정..
						-	[ In String ]
							-	"Hello World"

					**	[ Print String ]
						vs [ Print Text ]

						-	공통점..
							-	텍스트를 출력하기
								위한 노드..

						-	차이점..
							-	String..
								-	편집 가능..
							-	Text..
								-	편집 불가..


				2)	[ Event BeginPlay ]
					---> [ Print String ]

					-	실행 핀 연결..
						-	실행 핀끼리만 연결..
						-	처리 순서를 나타냄..
						-	왼쪽부터 오른쪽으로
							일련의 순서대로 실행 됨..


				3)	주석 추가..

					-	주석..
						-	프로그램 작성시 부연 설명이나
							주의 사항등 코드와 관련된
							내용을 정리하는 기능..
						
					-	적용..

						1)	[ Event BeginPlay ]와
							[ Print String ]를 모두 선택..

						2)	[ 단축키 C ]
							또는
							[ 마우스 우클릭 ]
							> [ 선택에 코멘트 추가 ] 선택..

						3)	주석 내용 입력..

							-	"게임 시작시 메시지 표시.."


				4)	노드 접기..

					-	노드가 완성되어 더 수정할
						필요가 없거나 복잡한 노드 연결을
						정리할 필요가 있을 때 적용..

					-	적용..

						1)	노드 접기에 포함할
							노드들 선택..
							-	주석도 포함해야 함..

						2)	[ 마우스 우클릭 ]
							> [ 노드 접기 ]
								-	이름..
									-	"시작시 처리"

							<--->	[ 마우스 우클릭 ]
									> [ 노드 펼침 ]

						3)	확인..
							-	[ 내 블루프린트 ]
								> [ 시작시 처리 ]
								추가 확인..

							-	[ 시작시 처리 ] 노드에
								마우스를 오버하면
								접힌 노드의 내용이
								섬네일로 표시 됨..

							-	[ 시작시 처리 ] 노드를
								더블 클릭하면 접힌 노드
								내부로 이동..


				5)	실행 및 확인..

					-	뷰포트 화면 좌상단에
						"Hello World" 출력..



		------------
		5)	디버깅..
		------------

			-	디버깅..

				-	프로그래밍에서
					문제점( 버그 )을 찾아
					해결해가는 과정..


			-	중단점 추가..

				1)	확인하기 원하는
					노드 선택..
					
				2)	[ 단축키 F9 ]
					또는
					[ 마우스 우클릭 ]
					> [ 중단점 토글 ]
					  또는
					  [ 중단점 추가 ]
					  <--->
					  [ 중단점 토글 ]
					  또는
					  [ 중단점 제거 ]

			
			-	디버깅 진행..

				-	중단점 추가 후 
					플레이 버튼 클릭..

				-	프로세스가 중단점을
					추가한 노드에 다다르면
					프로세스 멈춤..

				-	[ 한 프레임 진행 버튼 ]
					또는 [ 단축키 F10 ]을 누르면
					다음 프로세스로 진행..

					






==============================================================================

	[ 참고 ]

		레벨 블루프린트
		https://dev.epicgames.com/documentation/ko-kr/unreal-engine/level-blueprint-in-unreal-engine

==============================================================================