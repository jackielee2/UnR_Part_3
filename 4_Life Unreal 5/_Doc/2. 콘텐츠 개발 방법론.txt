====================================================
2. 콘텐츠 개발 방법론..
====================================================

	---------------------
	-	콘텐츠 제작
		프로세스의 이해..
	---------------------

		----------
		-	개요..
		----------

			-------------------
			-	일반적인 콘텐츠
				제작 프로세스..
			-------------------

				1)	제안 기획 단계..

					-	개발 진행에 대한
						여부를 검토..

				2)	프로토타이핑..
					-	제작 환경 구성과 
						핵심 기능 제작 진행 단계..
					-	핵심 기능을 개발하는
						질적 향상 단계..
					-	제안 기획 내용을 검증..
						-	결과가 긍정적일 경우
							본격적인 프로젝트 진행..							
							-	개발 파트별로
								단계별 개발 일정을 산출..
							-	작업 소요 인원 파악 및
								비용 산출 등..

				3)	프로젝트 착수..

					3-1)	알파 버전..
							-	프로토타입 단계에서 만든
								핵심 기능을 기반으로
								스테이지 구성, 애니메이션,
								사운드 효과 등 컨텐츠를
								풍성하게 만드는 요소들을
								개발하는 단계..
							-	콘텐츠를 풍성하게 하는
								양적 향상 단계..

					3-2)	베타 버전..
							-	밸런스 조정 및
								서비스 유지에 필요한
								요소들을 개발..
							-	다수의 유저들을 대상으로
								대규모 테스트를 진행하며
								얻은 피드백을 통해
								각종 결함 수정 및 밸런스
								조정 반복..
							-	프로젝트를 런칭하기 전
								최종 단계 이므로
								콘텐츠 외견의 변화는
								크지 않지만 완성도를
								높이는 과정..
								-	실무에서 가장
									바쁜 단계..

				6)	프로젝트 출시..



		------------------------
		-	과거 개발 프로세스..
			( 순차적 제작 방식.. )
		------------------------

			------------
			-	흐름도..
			------------

						[ 기획자 ]	--->	[ 아트 디자이너 ]
							|						|
							|						|
							V						|
						[ 프로그래머]		<--------
							|
							|
							V
						[ 결과물 ]

				-	[ 기획자 ]가 기획을 완성 후
					해당 아이디어를 [ 아트 ]와
					[ 프로그래머 ]에게 전달..

				-	[ 아트 ]에서 제작한 리소스를
					[ 프로그래머 ]에게 전달하여
					[ 프로그래머 ]가 작업을 진행..


			----------
			-	단점..
			----------

				-	순차적인 개발 방법으로 인해
					프로젝트 진행 초기에는 기획자,
					중기에는 아트, 말기에는
					프로그래머 순으로 업무 부하 발생..

				-	한쪽에서 작업 진행에
					예상치 못한 딜레이가 발생하면
					다음에 작업해야할 파트도
					함께 딜레이가 발생..
					
					
		------------------------
		-	현재 개발 프로세스..
			( 병렬 제작 방식.. )
		------------------------

			------------
			-	흐름도..
			------------

				[ 아트 디자이너 ]	----
										|	
					^					|
					|					|
					|					|
										|
				[ 기획자 ]			----|	-->	[ 결과물 ]
										|
					|					|
					|					|
					V					|
										|
				[ 프로그래머 ]		----


			----------
			-	개선..
			----------

				-	업무의 부담이 골고루 분산..

				-	각 직군별 결과물 확인과 적용이
					타 직군에 의존적이지 않고
					독립적인 형태로 진행..


			---------------
			-	개선 효과..
			---------------

			-	스트레스 저하로 인한 
				결과물의 퀄리티 상승과
				개발기간 단축..

			-	제작비 부담 감소..

			**	최신 게임 엔진을 이용하면
				병렬 제작 방식이 가능..

				-	언리얼, 유니티 등..


====================================================